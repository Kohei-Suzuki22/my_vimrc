set tags=tags;             " 親ディレクトリにあるtagsファイルを再帰的に探す
syntax on                  " Enable syntax highlighting.
filetype plugin indent on  " Enable file type based indentation.

set autoindent             " Respect indentation when starting a new line.
set expandtab              " Expand tabs to spaces. Essential in Python.
set tabstop=2              " Number of spaces tab is counted for.
set shiftwidth=2           " Number of spaces to use for autoindent.

set backspace=2            " Fix backspace behavior on most terminals.

colorscheme ron

set number
set title
set ambiwidth=double
set smartindent
set hidden
set history=50
set virtualedit=block
set whichwrap=b,s,[,],<,>
set backspace=indent,eol,start
set wildmenu

set ignorecase
set smartcase
set wrapscan
set incsearch
set hlsearch
set showmatch matchtime=1
set laststatus=2
set showmatch
set foldmethod=indent
set showcmd
" Powerlineを読み込む
" python3 from powerline.vim import setup as powerline_setup
" python3 powerline_setup()
" python3 del powerline_setup
autocmd BufRead * normal zR
" set foldcolumn=3  " visualize folding

let NERDTreeShowBookmarks = 1 " NERDTree起動時にブックマークを表示

set clipboard=unnamed,unnamedplus

set directory=$HOME/.vim/swap//

" set undo_options
set undofile

if !isdirectory(expand("$HOME/.vim/undodir"))
  call mkdir(expand("$HOME/.vim/undodir"),"p")
endif

set undodir=$HOME/.vim/undodir

" Pythonのファイルを保存するたびにタグファイルを再生成する
autocmd BufWritePost *.py silent! !ctags -R &

" command shortcut

noremap <c-h> <c-w><c-h>
noremap <c-j> <c-w><c-j>
noremap <c-k> <c-w><c-k>
noremap <c-l> <c-w><c-l>
noremap <leader>] :YcmCompleter GoTo<cr>
noremap <f5> :GundoToggle<cr>
tnoremap <c-j> <c-w><c-j>
tnoremap <c-k> <c-w><c-k>
tnoremap <c-l> <c-w><c-l>
tnoremap <c-h> <c-w><c-h>
tnoremap <:> <c-w><:>
command! Bd :bp | :sp | :bn | :bd

" plugins

packloadall           " 全てのプラグインをロード
silent! helptags All  " すべてのプラグイン用にヘルプファイルをロード

" vim-plugでプラグインを管理する
" YouCompleteMeはコンパイルに時間がかかるためタイムアウトを伸ばす
if has('python3')
  let g:gundo_prefer_python3 = 1
endif

call plug#begin()
let g:plug_timeout = 300
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-vinegar'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'mileszs/ack.vim'
Plug 'easymotion/vim-easymotion'
Plug 'junegunn/vim-plug'
Plug 'ycm-core/YouCompleteMe', {'do': './install.py'}
Plug 'sjl/gundo.vim'
Plug 'tpope/vim-fugitive'
Plug 'christoomey/vim-tmux-navigator'
Plug 'tpope/vim-dispatch'
Plug 'janko-m/vim-test'
Plug 'vim-syntastic/syntastic'
call plug#end()

" vim-plugがまだインストールされていなければインストールする
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https:/raw.github.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" syntasticの設定
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:synstastic_always_poplate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_python_pylint_exe = 'pylint3'
